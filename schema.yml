openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/ProductView/:
    get:
      operationId: api_ProductView_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
  /api/ProductView/{product_id}/:
    get:
      operationId: api_ProductView_retrieve
      parameters:
      - in: path
        name: product_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/UserOrder/:
    get:
      operationId: api_UserOrder_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: api_UserOrder_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreate'
          description: ''
  /api/UserOrder/{order_id}/:
    get:
      operationId: api_UserOrder_retrieve
      parameters:
      - in: path
        name: order_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: api_UserOrder_update
      parameters:
      - in: path
        name: order_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: api_UserOrder_partial_update
      parameters:
      - in: path
        name: order_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: api_UserOrder_destroy
      parameters:
      - in: path
        name: order_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/adminProductView/:
    get:
      operationId: api_adminProductView_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: api_adminProductView_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/adminProductView/{product_id}/:
    get:
      operationId: api_adminProductView_retrieve
      parameters:
      - in: path
        name: product_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_adminProductView_update
      parameters:
      - in: path
        name: product_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_adminProductView_partial_update
      parameters:
      - in: path
        name: product_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_adminProductView_destroy
      parameters:
      - in: path
        name: product_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/admincategory/:
    get:
      operationId: api_admincategory_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: api_admincategory_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/admincategory/{category_id}/:
    get:
      operationId: api_admincategory_retrieve
      parameters:
      - in: path
        name: category_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this category.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: api_admincategory_update
      parameters:
      - in: path
        name: category_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: api_admincategory_partial_update
      parameters:
      - in: path
        name: category_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: api_admincategory_destroy
      parameters:
      - in: path
        name: category_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this category.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/adminorder/:
    get:
      operationId: api_adminorder_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
  /api/adminorder/{order_id}/:
    get:
      operationId: api_adminorder_retrieve
      parameters:
      - in: path
        name: order_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/userCategory/:
    get:
      operationId: api_userCategory_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /api/userCategory/{category_id}/:
    get:
      operationId: api_userCategory_retrieve
      parameters:
      - in: path
        name: category_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this category.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    Category:
      type: object
      properties:
        category_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 300
        description:
          type: string
      required:
      - category_id
      - description
      - name
    Order:
      type: object
      properties:
        order_id:
          type: string
          format: uuid
          readOnly: true
        user_id:
          type: integer
        products:
          type: array
          items:
            type: string
            format: uuid
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,3})?$
          readOnly: true
        order_date:
          type: string
          format: date
          readOnly: true
        order_status:
          $ref: '#/components/schemas/OrderStatusEnum'
        shipping_address:
          type: string
          maxLength: 150
        payment_method:
          type: string
          maxLength: 100
      required:
      - order_date
      - order_id
      - products
      - shipping_address
      - total_price
      - user_id
    OrderCreate:
      type: object
      properties:
        order_id:
          type: string
          format: uuid
          readOnly: true
        user_id:
          type: integer
        products:
          type: array
          items:
            type: string
            format: uuid
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,3})?$
          readOnly: true
        order_date:
          type: string
          format: date
          readOnly: true
        order_status:
          $ref: '#/components/schemas/OrderStatusEnum'
        shipping_address:
          type: string
          maxLength: 150
        payment_method:
          type: string
          maxLength: 100
      required:
      - order_date
      - order_id
      - products
      - shipping_address
      - total_price
      - user_id
    OrderStatusEnum:
      enum:
      - pending
      - complete
      - '   failed'
      type: string
      description: |-
        * `pending` - pending
        * `complete` - complete
        * `   failed` - failed
    PatchedCategory:
      type: object
      properties:
        category_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 300
        description:
          type: string
    PatchedOrder:
      type: object
      properties:
        order_id:
          type: string
          format: uuid
          readOnly: true
        user_id:
          type: integer
        products:
          type: array
          items:
            type: string
            format: uuid
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,3})?$
          readOnly: true
        order_date:
          type: string
          format: date
          readOnly: true
        order_status:
          $ref: '#/components/schemas/OrderStatusEnum'
        shipping_address:
          type: string
          maxLength: 150
        payment_method:
          type: string
          maxLength: 100
    PatchedProduct:
      type: object
      properties:
        product_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 250
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,3})?$
        stock_quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        category:
          type: string
          maxLength: 300
        images:
          type: string
          format: uri
        tags:
          type: string
          maxLength: 250
        rating:
          type: string
          nullable: true
          maxLength: 50
    Product:
      type: object
      properties:
        product_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 250
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,3})?$
        stock_quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        category:
          type: string
          maxLength: 300
        images:
          type: string
          format: uri
        tags:
          type: string
          maxLength: 250
        rating:
          type: string
          nullable: true
          maxLength: 50
      required:
      - description
      - images
      - name
      - price
      - product_id
      - stock_quantity
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
